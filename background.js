// Generated by CoffeeScript 1.7.1
(function() {
  var checkSizes, lastSize, lastSizeUpdate, log;

  log = function() {
    return console.log.apply(console, arguments);
  };

  lastSize = '';

  lastSizeUpdate = 0;

  checkSizes = function() {
    var currentSize;
    currentSize = "" + window.screen.width + "x" + window.screen.height;
    if (currentSize === lastSize && new Date().getTime() - lastSizeUpdate < 30000) {
      log('***** NO SIZE CHANGE (too fresh)');
      return;
    }
    return chrome.storage.local.get(null, function(items) {
      var data;
      if (currentSize === lastSize) {
        log('***** NO SIZE CHANGE items/last/current:', items, lastSize, currentSize);
        lastSizeUpdate = new Date().getTime();
        data = items[currentSize] || {};
        return chrome.windows.getAll({}, function(wins) {
          var bestId, w, _i, _j, _len, _len1;
          log('windows:', wins);
          for (_i = 0, _len = wins.length; _i < _len; _i++) {
            w = wins[_i];
            data[w.id] = {
              left: w.left,
              top: w.top,
              width: w.width,
              height: w.height
            };
          }
          bestId = data.bestId;
          if (!data[bestId]) {
            bestId = wins[0].id;
          }
          for (_j = 0, _len1 = wins.length; _j < _len1; _j++) {
            w = wins[_j];
            if (w.id !== bestId && w.width * w.height > data[bestId].width * data[bestId].height) {
              bestId = w.id;
            }
          }
          data.bestId = bestId;
          items[currentSize] = data;
          return chrome.storage.local.set(items, function() {
            return log('new items', items);
          });
        });
      } else {
        log('----- SIZE CHANGED from/to', lastSize, currentSize);
        lastSize = currentSize;
        return chrome.windows.getAll({}, function(wins) {
          var id, w, _i, _len, _results;
          data = items[currentSize] || {};
          _results = [];
          for (_i = 0, _len = wins.length; _i < _len; _i++) {
            w = wins[_i];
            id = data[w.id] ? w.id : data.bestId;
            log('w.id/id/bestid', w.id, id, data.bestId);
            _results.push(chrome.windows.update(w.id, {
              top: data[id].top,
              left: data[id].left,
              width: data[id].width,
              height: data[id].height
            }));
          }
          return _results;
        });
      }
    });
  };

  checkSizes();

  window.setInterval(checkSizes, 5000);

}).call(this);
